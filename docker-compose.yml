version: "3.8"

networks:
  app-network:
    driver: bridge

services:
  library-app:
    image: library-app
    ports:
      - 8889:8889
    build:
      dockerfile: app.dockerfile
    networks:
      - app-network
    depends_on:
      - library-mysql
    deploy:
      replicas: 4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"] # Adjust to your app's health endpoint
      interval: 5s
      timeout: 20s
      retries: 10

#  library-ws:
#    image: library-ws
#    ports:
#      - 8890:8890
#    build:
#      dockerfile: app.dockerfile
#    networks:
#      - app-network
#    depends_on:
#      - library-mysql
#    deploy:
#      replicas: 4
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8888/health" ]
#      interval: 5s
#      timeout: 20s
#      retries: 10

  library-mysql:
    image: mysql:latest
    container_name: library-mysql
    restart: unless-stopped
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - app-network
    env_file: files/env/.env
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  library-migration:
    image: library-migration
    networks:
      - app-network
    depends_on:
      - library-mysql
    build:
      dockerfile: migration.dockerfile
    profiles:
      - donotstart

  library-seeder:
    image: library-seeder
    networks:
      - app-network
    depends_on:
      - library-mysql
    build:
      dockerfile: seeder.dockerfile
    profiles:
      - donotstart

volumes:
  mysql-data:
