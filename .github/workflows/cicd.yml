name: Rewrite New Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  prepare_env:
    name: Prepare Environment
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.22' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go Modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install Mockery
        run: |
          go install github.com/vektra/mockery/v2/...@v2.43.1
          mkdir -p ~/.cache/mockery
          cp $(go env GOPATH)/bin/mockery ~/.cache/mockery/mockery
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Cache Mockery Binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/mockery
          key: ${{ runner.os }}-mockery-v2.43.1

  test:
    name: Test the code
    runs-on: ubuntu-latest
    needs: prepare_env
    strategy:
      matrix:
        go-version: [ '1.22' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Restore Mockery Binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/mockery
          key: ${{ runner.os }}-mockery-v2.43.1

      - name: Add Mockery to PATH
        run: |
          echo "~/.cache/mockery" >> $GITHUB_PATH

      - name: Execute unit test
        run: |
          mockery --all --keeptree
          go test -coverprofile=coverage.out ./... 
          go tool cover -html=coverage.out

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.out

  build:
    name: Build the app
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        go-version: [ '1.22' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build the app
        run: |
          go mod tidy
          go build -o bin/library_app/http ./cmd/library_app/http/main.go

      - name: Zip the build
        run: |
          zip deployment.zip bin/library_app/http config.yml
